"""
Django settings for ecommerce project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
# from dotenv import load_dotenv
import os

# Now you can access your variables
# SECRET_KEY = os.getenv('SECRET_KEY')
# DB_NAME = os.getenv('DB_NAME')
# DB_USER = os.getenv('DB_USER')
# DB_PASSWORD = os.getenv('DB_PASSWORD')

# Load variables from .env
# load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Define the base directory for media files
# MEDIA_ROOT = BASE_DIR / 'ecommerce/media'

# Define the URL prefix for media files
MEDIA_URL = '/media/'


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = os.getenv('SECRET_KEY')
SECRET_KEY = 'django-insecure-bhxxb6589q9z)+!6w&@7w#a_%70$gy!i1tchj2946r8!oedyli'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = os.environ.get('DEBUG')
DEBUG = False

# ALLOWED_HOSTS = []
# ALLOWED_HOSTS = ['.vercel.app', '127.0.0.1', 'localhost']
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'knittingstore.apps.KnittingstoreConfig',
    'whitenoise.runserver_nostatic',
]

MIDDLEWARE = [
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ecommerce.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # added to get all categories globally
                'knittingstore.context_processors.categories_processor',
                'knittingstore.context_processors.cart_items_count',
            ],
        },
    },
]

WSGI_APPLICATION = 'ecommerce.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': os.getenv('DB_NAME'),
#         'USER': os.getenv('DB_USER'),
#         'PASSWORD': os.getenv('DB_PASSWORD'),
#         'HOST': 'localhost',  # Replace with your host if it's different
#         'PORT': '5432',       # Replace with your port if it's different
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'defaultdb',
        'USER': 'avnadmin',
        'PASSWORD': 'AVNS_sO4kaCrA78SoXVGjGf-',
        'HOST': 'pg-6375de4-olegs-4d59.a.aivencloud.com',
        'PORT': 19323
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/



# STATICFILES_DIRS = [
#     BASE_DIR / 'static',  # This should point to the directory where your static files are located
# ]
STATIC_URL = 'static/'
STATICFILES_DIRS = os.path.join(BASE_DIR, 'static'),
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles_build', 'static')

MEDIA_URLS ='/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'static'),
#     # Other static directories if any
# ]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# settings.py

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  
    # Other backends if necessary
]

# AUTH_USER_MODEL = 'knittingstore.CustomUser'
# LOGIN_URL = 'login'

# Add or verify these settings
LOGIN_URL = '/login/'

# URL to redirect to after a successful login
LOGIN_REDIRECT_URL = '/'

# URL to redirect to after a successful logout
LOGOUT_REDIRECT_URL = '/'

# settings.py

# Add Cloudinary settings

import cloudinary
import cloudinary.uploader
import cloudinary.api

cloudinary.config(
    cloud_name='dymne7cde',
    api_key='973684546521283',
    api_secret='EUe6vH2blGMQfXf7q_-Q4mULoXA'
)

# CLOUDINARY_STORAGE = {
#     'CLOUD_NAME': 'dymne7cde',
#     'API_KEY': 'your_api_key',
#     'API_SECRET': 'EUe6vH2blGMQfXf7q_-Q4mULoXA',
# }

# DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'


# cloudinary://973684546521283:EUe6vH2blGMQfXf7q_-Q4mULoXA@dymne7cde
# CLOUDINARY_URL=cloudinary://973684546521283:EUe6vH2blGMQfXf7q_-Q4mULoXA@dymne7cde